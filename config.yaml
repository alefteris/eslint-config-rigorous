---
rules:

  # Possible Errors

  comma-dangle:
    - 2
    - always-multiline
  no-comma-dangle: 0 # DEPRECATED
  no-cond-assign:
    - 2
    - except-parens
  no-console: 2
  no-constant-condition: 2
  no-control-regex: 2
  no-debugger: 2
  no-dupe-args: 2
  no-dupe-keys: 2
  no-duplicate-case: 2
  no-empty-class: 2
  no-empty: 2
  no-ex-assign: 2
  no-extra-boolean-cast: 2
  no-extra-parens: 2
  no-extra-semi: 2
  no-func-assign: 2
  no-inner-declarations:
    - 2
    - both
  no-invalid-regexp: 2
  no-irregular-whitespace: 2
  no-negated-in-lhs: 2
  no-obj-calls: 2
  no-regex-spaces: 2
  no-reserved-keys: 2
  no-sparse-arrays: 2
  no-unreachable: 2
  use-isnan: 2
  valid-jsdoc:
    - 2
    - prefer:
        return: return
      requireReturn: false
      requireParamDescription: true
      requireReturnDescription: true
  valid-typeof: 2

  # Best Practices

  accessor-pairs: # Enforces getter/setter pairs in objects
    - 2
    - getWithoutSet: false # Warn for getters without setters
  block-scoped-var: 2
  complexity:
    - 2
    - 11
  consistent-return: 2
  curly:
    - 2
    - all
  default-case: 2
  dot-notation:
    - 2
    - allowKeywords: true
  dot-location:
    - 2
    - property
  eqeqeq: 2
  guard-for-in: 2
  no-alert: 2
  no-caller: 2
  no-div-regex: 2
  no-else-return: 2
  no-empty-label: 2
  no-eq-null: 2
  no-eval: 2
  no-extend-native: 2
  no-extra-bind: 2
  no-fallthrough: 2
  no-floating-decimal: 2
  no-implied-eval: 2
  no-iterator: 2
  no-labels: 2
  no-lone-blocks: 2
  no-loop-func: 2
  no-multi-spaces:
    - 2
    - exceptions:
        Property: false
  no-multi-str: 2
  no-native-reassign: 2
  no-new-func: 2
  no-new-wrappers: 2
  no-new: 2
  no-octal-escape: 2
  no-octal: 2
  no-param-reassign: 2
  no-process-env: 0
  no-proto: 2
  no-redeclare: 2
  no-return-assign: 2
  no-script-url: 2
  no-self-compare: 2
  no-sequences: 2
  no-throw-literal: 2
  no-unused-expressions: 2
  no-void: 2
  no-warning-comments:
    - 1
    - terms:
        - todo
        - fixme
        - xxx
      location: start
  no-with: 2
  radix: 2
  vars-on-top: 2
  wrap-iife:
    - 2
    - outside
  yoda:
    - 2
    - never

  # Strict Mode

  global-strict: 0 # DEPRECATED
  no-extra-strict: 0 # DEPRECATED
  strict: # Strict Mode
    - 2
    - global

  # Variables

  no-catch-shadow: 2 # Disallow Shadowing of Variables Inside of catch
  no-delete-var: 2 # Disallow Variables Deletion
  no-label-var: 2 # Disallow Labels That Are Variables Names
  no-shadow-restricted-names: 2 # Disallow Shadowing of Restricted Names
  no-shadow: # Disallow Shadowing
    - 2
    - hoist: all # Hoisting behavior
  no-undef-init: 2 # Disallow Initializing to undefined
  no-undef: 2 # Disallow Undeclared Variables
  no-undefined: 2 # Disallow Use of undefined Variable
  no-unused-vars: # Disallow Unused Variables
    - 2
    - vars: all
      args: after-used
  no-use-before-define: 2 # Disallow Early Use

  # Node.js

  handle-callback-err: # Ensures Callback Error Handling
    - 2
    - "^(err|error|.+Error)$" # Regexp pattern for the name of the error variable
  no-mixed-requires: # Disallow Mixed Requires
    - 2
    - true # Grouping of variables of the same type
  no-new-require: 2 # Disallow new require
  no-path-concat: 2 # Disallow string concatenation when using _dirname and _filename
  no-process-exit: 2 # Disallow process.exit()
  no-restricted-modules: # Disallow Node modules
    - 2
    - domain
    - smalloc
    - sys
  no-sync: 2 # Disallow Synchronous Methods

  # Stylistic Issues
  array-bracket-spacing: # Disallow or enforce spaces inside of brackets
    - 2
    - never
    - singleValue: false
      objectsInArrays: false
      arraysInArrays: false
  brace-style: # Require Brace Style
    - 2
    - 1tbs
    - allowSingleLine: false
  camelcase: # Require Camelcase
    - 2
    - properties: always
  comma-spacing: # Enforces spacing around commas
    - 2
    - before: false
      after: true
  comma-style: # Comma style
    - 2
    - last
    - exceptions:
        ArrayExpression: false
        ObjectExpression: false
        VariableDeclaration: false
  computed-property-spacing: # Disallow or enforce spaces inside of computed properties
    - 2
    - never
  consistent-this: # Require Consistent This
    - 2
    - that
  eol-last: 2 # Require file to end with single newline
  func-names: 0 # Require Function Expressions to have a Name
  func-style:
    - 2
    - declaration
  indent: # Validate Indentation
   - 2
   - 2
   - indentSwitchCase: true
  key-spacing: # Enforce Property Spacing
    - 2
    - beforeColon: false
      afterColon: true
  lines-around-comment:
    - 2
    - beforeBlockComment: true
      afterBlockComment: false
      beforeLineComment: false
      afterLineComment: false
  linebreak-style:
    - 2
    - unix
  max-nested-callbacks:
    - 2
    - 3
  new-cap: 2
  new-parens: 2
  newline-after-var: 0
  no-array-constructor: 2
  no-continue: 2
  no-inline-comments: 2
  no-lonely-if: 2
  no-mixed-spaces-and-tabs: 2
  no-multiple-empty-lines:
    - 2
    - max: 1
  no-nested-ternary: 2
  no-new-object: 2
  no-space-before-semi: 0 # DEPRECATED
  no-spaced-func: 2
  no-ternary: 2
  no-trailing-spaces:
    - 2
    - skipBlankLines: false
  no-underscore-dangle: 0
  no-unneeded-ternary: 2
  no-wrap-func: 0 # DEPRECATED
  object-curly-spacing:
    - 2
    - never
  one-var:
    - 2
    - never
  operator-assignment:
    - 2
    - always
  operator-linebreak:
    - 2
    - after
  padded-blocks:
    - 2
    - never
  quote-props:
    - 2
    - as-needed
  quotes:
    - 2
    - single
    - avoid-escape
  semi-spacing:
    - 2
    - before: false
      after: true
  semi:
    - 2
    - always
  sort-vars:
    - 2
    - ignoreCase: true
  space-after-function-name: 0 # DEPRECATED
  space-after-keywords:
    - 2
    - always
  space-before-blocks:
    - 2
    - always
  space-before-function-paren:
    - 2
    - never
  space-before-function-parentheses: 0 # DEPRECATED
  space-in-brackets: 0 # DEPRECATED
  space-in-parens:
    - 2
    - never
  space-infix-ops:
    - 2
    - int32Hint: false
  space-return-throw-case: 2
  space-unary-ops:
    - 2
    - words: true
      nonwords: false
  space-unary-word-ops: 0 # DEPRECATED
  spaced-comment:
    - 2
    - always
  spaced-line-comment: 0 # DEPRECATED
  wrap-regex: 2

  # ECMAScript 6

  constructor-super: 2 # Verify super() callings in constructors
  generator-star-spacing: # Enforce the spacing around the * in generators
    - 2
    - before # Spacing around * of the generator function
  generator-star: 0 # DEPRECATED
  no-this-before-super: 2 # Disallow to use this/super before super() calling in constructors
  no-var: 2 # Require let or const instead of var
  object-shorthand: # Require Object Literal Shorthand Syntax
    - 2
    - always
  prefer-const: 2 # Suggest to use const

  # Legacy

  max-depth: # Limit Maximum Depth
    - 2
    - 4 # Max depth blocks can be nested in a function
  max-len: # Limit Maximum Length of Line
    - 2
    - 120 # Max number of characters on each line
    - 2 # The character count to use whenever a tab character is encountered
  max-params: # Limit Maximum Number of Parameters
    - 1
    - 4 # Max number of parameters a function can take
  max-statements: # Limit Maximum Number of Statements
    - 1
    - 20 # Max number of statements allowed in a function
  no-bitwise: 2 # Disallow Bitwise Operators
  no-plusplus: 0 # Disallow ++ and --
